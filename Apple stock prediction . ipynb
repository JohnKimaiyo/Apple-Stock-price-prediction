{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9a7fec05-bb69-4599-9880-878de592649a",
   "metadata": {},
   "source": [
    "# Apple stock prediction\n",
    "\n",
    "\n",
    "This script fetches historical stock data, trains a Linear Regression model, and predicts future stock prices. You can extend it using more advanced models like LSTMs or ARIMA for better accuracy. Let me know if you need improvements! ðŸš€"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ee2685b-6dce-4ffa-817f-28516527f0ca",
   "metadata": {},
   "source": [
    "## Step 1 : Import libraires"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "516529c2-67c3-4524-b4ca-35f0ecd5157e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: yfinance in c:\\users\\jki\\anaconda3\\lib\\site-packages (0.2.54)\n",
      "Requirement already satisfied: pandas>=1.3.0 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (2.1.4)\n",
      "Requirement already satisfied: numpy>=1.16.5 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (1.26.4)\n",
      "Requirement already satisfied: requests>=2.31 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (2.31.0)\n",
      "Requirement already satisfied: multitasking>=0.0.7 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (0.0.11)\n",
      "Requirement already satisfied: platformdirs>=2.0.0 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (3.10.0)\n",
      "Requirement already satisfied: pytz>=2022.5 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (2023.3.post1)\n",
      "Requirement already satisfied: frozendict>=2.3.4 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (2.4.6)\n",
      "Requirement already satisfied: peewee>=3.16.2 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (3.17.9)\n",
      "Requirement already satisfied: beautifulsoup4>=4.11.1 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from yfinance) (4.12.2)\n",
      "Requirement already satisfied: soupsieve>1.2 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from pandas>=1.3.0->yfinance) (2.8.2)\n",
      "Requirement already satisfied: tzdata>=2022.1 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from pandas>=1.3.0->yfinance) (2023.3)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from requests>=2.31->yfinance) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from requests>=2.31->yfinance) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from requests>=2.31->yfinance) (2.0.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from requests>=2.31->yfinance) (2024.2.2)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\jki\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas>=1.3.0->yfinance) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install yfinance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "86ccb2f5-1c22-4169-990e-affec255ac4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import yfinance as yf\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89b6a8bb-19eb-43ec-88ef-369f2054f77a",
   "metadata": {},
   "source": [
    "## Step 2: Download historical stock data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "cc861434-254c-4821-bd1f-36036f7113a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_stock_data(ticker, start_date, end_date):\n",
    "    stock_data = yf.download(ticker, start=start_date, end=end_date)\n",
    "    return stock_data\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8465d274-43fb-4fdb-8871-270025e13a5e",
   "metadata": {},
   "source": [
    "## Step 3 : Prepare dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "db08b712-cdc0-4887-b9b0-30be5f32a6e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def prepare_data(stock_data):\n",
    "    stock_data = stock_data[['Close']]  # Use closing prices\n",
    "    stock_data['Prediction'] = stock_data['Close'].shift(-30)  # Shift to predict next 30 days\n",
    "\n",
    "    X = np.array(stock_data.drop(['Prediction'], axis=1))  # Features\n",
    "    y = np.array(stock_data['Prediction'])  # Target\n",
    "\n",
    "    X = X[:-30]  # Remove last 30 rows with NaN values\n",
    "    y = y[:-30]\n",
    "    \n",
    "    return X, y\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37258118-6541-4a56-a2bb-b7e3a121fc1b",
   "metadata": {},
   "source": [
    "## Step 4 : Train model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "01a18cf8-a9be-42a7-9524-7ba1f65ea807",
   "metadata": {},
   "outputs": [],
   "source": [
    "def train_model(X, y):\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "    model = LinearRegression()\n",
    "    model.fit(X_train, y_train)\n",
    "    return model\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "249ac052-bb98-48fc-bdc2-35cee73956f5",
   "metadata": {},
   "source": [
    "## Step 5 : Predict future stock prices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c3d28af7-58cc-40d3-b40f-99d61d3f2441",
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict_future(model, days):\n",
    "    future_days = np.array(range(1, days + 1)).reshape(-1, 1)\n",
    "    future_predictions = model.predict(future_days)\n",
    "    return future_days, future_predictions\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0272a0e2-cf6c-467f-8dbe-9262e86116ad",
   "metadata": {},
   "source": [
    "## Step 6 : Main execution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f856b160-d232-4721-996c-030650b19b07",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[*********************100%***********************]  1 of 1 completed"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[77.85190625 78.43256482 79.0132234  79.59388198 80.17454056 80.75519914\n",
      " 81.33585771 81.91651629 82.49717487 83.07783345 83.65849202 84.2391506\n",
      " 84.81980918 85.40046776 85.98112634 86.56178491 87.14244349 87.72310207\n",
      " 88.30376065 88.88441922 89.4650778  90.04573638 90.62639496 91.20705354\n",
      " 91.78771211 92.36837069 92.94902927 93.52968785 94.11034642 94.691005  ]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "C:\\Users\\jki\\AppData\\Local\\Temp\\ipykernel_8024\\2607025683.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  stock_data['Prediction'] = stock_data['Close'].shift(-30)  # Shift to predict next 30 days\n"
     ]
    }
   ],
   "source": [
    "ticker = 'AAPL'\n",
    "start_date = '2023-01-01'\n",
    "end_date = '2024-01-01'\n",
    "\n",
    "stock_data = get_stock_data(ticker, start_date, end_date)\n",
    "X, y = prepare_data(stock_data)\n",
    "model = train_model(X, y)\n",
    "\n",
    "future_days, future_predictions = predict_future(model, 30)\n",
    "print(future_predictions)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8d75ef62-95dc-4440-a686-8928ddcca3ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Plot Future Predictions\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.plot(future_days, future_predictions, marker='o', linestyle='dashed', color='blue', label=\"Predicted Prices\")\n",
    "plt.xlabel(\"Future Days\")\n",
    "plt.ylabel(\"Stock Price (Predicted)\")\n",
    "plt.title(\"Apple Stock Price Prediction for Next 30 Days\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b7dcc64-bbbb-49ae-aa57-9dcd6bbc0d9b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
